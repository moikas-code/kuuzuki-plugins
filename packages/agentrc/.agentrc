{
  "project": {
    "name": "agentrc",
    "type": "node-project",
    "description": "Project enhanced with kuuzuki .agentrc support",
    "language": "javascript",
    "framework": null
  },
  "commands": {
    "build": "bun run build",
    "test": "bun test",
    "dev": "bun run dev"
  },
  "codeStyle": {
    "language": "javascript",
    "paradigm": "functional-oop-hybrid",
    "methodology": "DRY",
    "naming": "functional-descriptive",
    "runtime": "bun"
  },
  "rules": [
    "Build: `npm run build` or `bun --bun build.js`",
    "Test: `npm test` (runs testtt/test-plugin.js)",
    "Single test: `node testtt/test-plugin.js` (direct test execution)",
    "Development: `npm run dev` (builds and symlinks for live development)",
    "Watch mode: `npm run build:watch` or `npm run dev:watch`",
    "Install globally: `npm run install-global`",
    "Install to project: `npm run install-project`",
    "**Imports**: Use ES6 imports with explicit file extensions (.js)",
    "**Format**: No semicolons, 2-space indentation, prefer const/let",
    "**Types**: Use JSDoc comments for type documentation (no TypeScript)",
    "**Naming**: Use camelCase for variables/functions, kebab-case for files",
    "**Comments**: Comprehensive JSDoc blocks for all exported functions",
    "**Error handling**: Use try/catch blocks with descriptive error messages",
    "Entry point: `src/index.js` (exports KuuzukiAgentrcPlugin)",
    "Notifications: `src/notifications.js` (OS-level notification system)",
    "Build: `build.js` (custom bundler for OpenCode compatibility)",
    "Tests: `testtt/test-plugin.js` (mock OpenCode environment for testing)",
    "Build: `npm run build` or `bun --bun build.js`",
    "Test: `npm test` (runs testtt/test-plugin.js)",
    "Single test: `node testtt/test-plugin.js` (direct test execution)",
    "Development: `npm run dev` (builds and symlinks for live development)",
    "Watch mode: `npm run build:watch` or `npm run dev:watch`",
    "Install globally: `npm run install-global`",
    "Install to project: `npm run install-project`",
    "**Imports**: Use ES6 imports with explicit file extensions (.js)",
    "**Format**: No semicolons, 2-space indentation, prefer const/let",
    "**Types**: Use JSDoc comments for type documentation (no TypeScript)",
    "**Naming**: Use camelCase for variables/functions, kebab-case for files",
    "**Comments**: Comprehensive JSDoc blocks for all exported functions",
    "**Error handling**: Use try/catch blocks with descriptive error messages",
    "Entry point: `src/index.js` (exports KuuzukiAgentrcPlugin)",
    "Notifications: `src/notifications.js` (OS-level notification system)",
    "Build: `build.js` (custom bundler for OpenCode compatibility)",
    "Tests: `testtt/test-plugin.js` (mock OpenCode environment for testing)",
    "Always use JavaScript/Bun - avoid TypeScript unless absolutely necessary",
    "Use functional programming paradigms combined with OOP when appropriate",
    "Apply DRY (Don't Repeat Yourself) methodology rigorously",
    "Use descriptive, functional names for variables, functions, and classes",
    "Follow existing code style and patterns",
    "Use JSDoc comments for type documentation instead of TypeScript",
    "Write tests for new functionality using functional testing approaches",
    "Prefer pure functions - avoid side effects where possible",
    "Use higher-order functions for code reuse and composition",
    "When using classes, keep them focused with single responsibility",
    "Favor composition over inheritance",
    "Use semantic commit messages",
    "Prefer async/await over Promise.then() for readable async code",
    "Follow a hybrid approach to functional and OOP programming - leverage the best of both paradigms",
    "Follow a hybrid approach to functional and OOP programming"
  ],
  "tools": {
    "packageManager": "bun"
  },
  "dependencies": {
    "critical": []
  },
  "metadata": {
    "version": "1.0.0",
    "generator": "kuuzuki-opencode-plugin",
    "created": "2025-08-20T05:01:08.174Z",
    "analyzed": true
  }
}